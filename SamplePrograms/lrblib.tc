
// display proper fraction
dpfx int n,d,p [
 if p [MC 10*n/d,14;dpfx 10*n%d,d,p-1]
 ]

// dpfx helper function
dpf int n,d,p [
 MC '.',1
 dpfx n,d,p
 ]

color char c [
 MC '\'-'A',1;MC '\'-1,1;MC '3',1;MC c,1;MC 'm',1
 ]

pos int rc [
 if(rc>9) [MC rc/10+48,1;rc=rc%10]
 MC rc+48,1
 ]

posc int r,c [
 int R,C;R=25;C=80
 if((r>=1)*(r<=R)*(c>=1)*(c<=C)==0)return 1
 MC '\'-'A',1;MC '\'-1,1;pos r;MC ';',1;pos c;MC 'H',1;return 0
 ]

hilo char c [
 MC '\'-'A',1;MC '\'-1,1;MC c,1;MC 'm',1
 ]

oo char hs [
 MC '\'-'A',1;MC '\'-1,1;MC '?',1;MC '2',1;MC '5',1
 MC hs,1
 ]

on [
 oo 'h'
 ]

off [
 oo 'l'
 ]

sak [
 printf "%cStrike any key ... ",10
 char ch
 ch=getchar()
 return(ch);
 ]

tolower char s(0) [
 int i
 while(i<strlen(s)) [
  if((s(i)>='A')*(s(i)<='Z'))s(i)=s(i)+' '
  i=i+1
  ]
 ]

toupper char s(0) [
 int i
 while(i<strlen(s)) [
  if((s(i)>='a')*(s(i)<='z'))s(i)=s(i)-' '
  i=i+1
  ]
 ]

// quiet exit
abort [MC 109]

getprop char file(0),request(0),tcbuff(0);int bufflen;char default(0) [ // returns pointer to text following request
 return MC file,request,tcbuff,bufflen,default,116
 ]

help char h(0) [
 char url(50)
 strcpy url,"http://primepuzzle.com/tc/tchelp."
 strcat url,h
 strcat url,".txt" 
 printf "%cPlease visit %s",10,url
 ]

lrblibver [
 printf "%clrblib version 1.12%c",10,10
 ]

cdate char buff(0) [
	return MC buff,110
]

url int n; char u(0) [ // returns pointer to url string
 if n==0 strcpy u,"http://tinyurl.com/programmersguide"
 if n==1 strcpy u,"http://primepuzzle.com/lee-bradley/lrblib.tc"
 if n==2 strcpy u,"http://primepuzzle.com/lee-bradley/pps/library.tc"
 if n==3 strcpy u,"http://primepuzzle.com/tc"
 if n==4 strcpy u,"https://www.grammarly.com/blog/yea-yeah-yay/"
 return u
 ]

// splits the string s into the array t based on the delimiter d
// returns the number of elements found
split int t(0);char s(0),d(0) [
 int y,ix,tx,sl,ds;ds=strlen(d);t(0)=s;sl=strlen(s)
 while (sl-tx) [
  ix=index(s+tx,sl-tx,d,ds)
  tx=tx+ix+ds-1;y=y+1;t(y)=s+tx;s(tx-ds)=0
  ]
 return y
 ]
 
reverse char s(0) [ // reverse string s in place
 int c,i,j
 i=0;j=strlen(s)-1
 while (i<j) [c=s(i);s(i)=s(j);s(j)=c;i=i+1;j=j-1]
 ]

itoa int n;char nst(0) [ // convert integer n to string nst
 int w
 w=0;nst(0)=n%10+'0';n=n/10
 while (n) [nst(w=w+1)=n%10+'0';n=n/10]
 nst(w=w+1)=0
 reverse(nst)
 ]

